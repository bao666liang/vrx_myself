// Generated by gencpp from file vrx_gazebo/BallShooter.msg
// DO NOT EDIT!


#ifndef VRX_GAZEBO_MESSAGE_BALLSHOOTER_H
#define VRX_GAZEBO_MESSAGE_BALLSHOOTER_H

#include <ros/service_traits.h>


#include <vrx_gazebo/BallShooterRequest.h>
#include <vrx_gazebo/BallShooterResponse.h>


namespace vrx_gazebo
{

struct BallShooter
{

typedef BallShooterRequest Request;
typedef BallShooterResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct BallShooter
} // namespace vrx_gazebo


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::vrx_gazebo::BallShooter > {
  static const char* value()
  {
    return "e8e12124716653af3165b82608274851";
  }

  static const char* value(const ::vrx_gazebo::BallShooter&) { return value(); }
};

template<>
struct DataType< ::vrx_gazebo::BallShooter > {
  static const char* value()
  {
    return "vrx_gazebo/BallShooter";
  }

  static const char* value(const ::vrx_gazebo::BallShooter&) { return value(); }
};


// service_traits::MD5Sum< ::vrx_gazebo::BallShooterRequest> should match
// service_traits::MD5Sum< ::vrx_gazebo::BallShooter >
template<>
struct MD5Sum< ::vrx_gazebo::BallShooterRequest>
{
  static const char* value()
  {
    return MD5Sum< ::vrx_gazebo::BallShooter >::value();
  }
  static const char* value(const ::vrx_gazebo::BallShooterRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::vrx_gazebo::BallShooterRequest> should match
// service_traits::DataType< ::vrx_gazebo::BallShooter >
template<>
struct DataType< ::vrx_gazebo::BallShooterRequest>
{
  static const char* value()
  {
    return DataType< ::vrx_gazebo::BallShooter >::value();
  }
  static const char* value(const ::vrx_gazebo::BallShooterRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::vrx_gazebo::BallShooterResponse> should match
// service_traits::MD5Sum< ::vrx_gazebo::BallShooter >
template<>
struct MD5Sum< ::vrx_gazebo::BallShooterResponse>
{
  static const char* value()
  {
    return MD5Sum< ::vrx_gazebo::BallShooter >::value();
  }
  static const char* value(const ::vrx_gazebo::BallShooterResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::vrx_gazebo::BallShooterResponse> should match
// service_traits::DataType< ::vrx_gazebo::BallShooter >
template<>
struct DataType< ::vrx_gazebo::BallShooterResponse>
{
  static const char* value()
  {
    return DataType< ::vrx_gazebo::BallShooter >::value();
  }
  static const char* value(const ::vrx_gazebo::BallShooterResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // VRX_GAZEBO_MESSAGE_BALLSHOOTER_H
