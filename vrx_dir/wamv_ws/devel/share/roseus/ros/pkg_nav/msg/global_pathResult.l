;; Auto-generated. Do not edit!


(when (boundp 'pkg_nav::global_pathResult)
  (if (not (find-package "PKG_NAV"))
    (make-package "PKG_NAV"))
  (shadow 'global_pathResult (find-package "PKG_NAV")))
(unless (find-package "PKG_NAV::GLOBAL_PATHRESULT")
  (make-package "PKG_NAV::GLOBAL_PATHRESULT"))

(in-package "ROS")
;;//! \htmlinclude global_pathResult.msg.html
(if (not (find-package "NAV_MSGS"))
  (ros::roseus-add-msgs "nav_msgs"))


(defclass pkg_nav::global_pathResult
  :super ros::object
  :slots (_runResult _result _smoothPath _rawPath ))

(defmethod pkg_nav::global_pathResult
  (:init
   (&key
    ((:runResult __runResult) 0)
    ((:result __result) 0)
    ((:smoothPath __smoothPath) (instance nav_msgs::Path :init))
    ((:rawPath __rawPath) (instance nav_msgs::Path :init))
    )
   (send-super :init)
   (setq _runResult (round __runResult))
   (setq _result (round __result))
   (setq _smoothPath __smoothPath)
   (setq _rawPath __rawPath)
   self)
  (:runResult
   (&optional __runResult)
   (if __runResult (setq _runResult __runResult)) _runResult)
  (:result
   (&optional __result)
   (if __result (setq _result __result)) _result)
  (:smoothPath
   (&rest __smoothPath)
   (if (keywordp (car __smoothPath))
       (send* _smoothPath __smoothPath)
     (progn
       (if __smoothPath (setq _smoothPath (car __smoothPath)))
       _smoothPath)))
  (:rawPath
   (&rest __rawPath)
   (if (keywordp (car __rawPath))
       (send* _rawPath __rawPath)
     (progn
       (if __rawPath (setq _rawPath (car __rawPath)))
       _rawPath)))
  (:serialization-length
   ()
   (+
    ;; int8 _runResult
    1
    ;; int32 _result
    4
    ;; nav_msgs/Path _smoothPath
    (send _smoothPath :serialization-length)
    ;; nav_msgs/Path _rawPath
    (send _rawPath :serialization-length)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; int8 _runResult
       (write-byte _runResult s)
     ;; int32 _result
       (write-long _result s)
     ;; nav_msgs/Path _smoothPath
       (send _smoothPath :serialize s)
     ;; nav_msgs/Path _rawPath
       (send _rawPath :serialize s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; int8 _runResult
     (setq _runResult (sys::peek buf ptr- :char)) (incf ptr- 1)
     (if (> _runResult 127) (setq _runResult (- _runResult 256)))
   ;; int32 _result
     (setq _result (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;; nav_msgs/Path _smoothPath
     (send _smoothPath :deserialize buf ptr-) (incf ptr- (send _smoothPath :serialization-length))
   ;; nav_msgs/Path _rawPath
     (send _rawPath :deserialize buf ptr-) (incf ptr- (send _rawPath :serialization-length))
   ;;
   self)
  )

(setf (get pkg_nav::global_pathResult :md5sum-) "0484cbdc02fdc0c124615a59a7233b57")
(setf (get pkg_nav::global_pathResult :datatype-) "pkg_nav/global_pathResult")
(setf (get pkg_nav::global_pathResult :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Define the result
int8  runResult  # #  -1：处理失败  0 : 未处理     1：正在处理   2：处理完成  
int32 result #test -cyb
nav_msgs/Path smoothPath  
nav_msgs/Path rawPath  

================================================================================
MSG: nav_msgs/Path
#An array of poses that represents a Path for a robot to follow
Header header
geometry_msgs/PoseStamped[] poses

================================================================================
MSG: std_msgs/Header
# Standard metadata for higher-level stamped data types.
# This is generally used to communicate timestamped data 
# in a particular coordinate frame.
# 
# sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
string frame_id

================================================================================
MSG: geometry_msgs/PoseStamped
# A Pose with reference coordinate frame and timestamp
Header header
Pose pose

================================================================================
MSG: geometry_msgs/Pose
# A representation of pose in free space, composed of position and orientation. 
Point position
Quaternion orientation

================================================================================
MSG: geometry_msgs/Point
# This contains the position of a point in free space
float64 x
float64 y
float64 z

================================================================================
MSG: geometry_msgs/Quaternion
# This represents an orientation in free space in quaternion form.

float64 x
float64 y
float64 z
float64 w

")



(provide :pkg_nav/global_pathResult "0484cbdc02fdc0c124615a59a7233b57")


