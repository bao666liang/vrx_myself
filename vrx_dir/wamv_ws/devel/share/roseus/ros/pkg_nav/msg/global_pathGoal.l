;; Auto-generated. Do not edit!


(when (boundp 'pkg_nav::global_pathGoal)
  (if (not (find-package "PKG_NAV"))
    (make-package "PKG_NAV"))
  (shadow 'global_pathGoal (find-package "PKG_NAV")))
(unless (find-package "PKG_NAV::GLOBAL_PATHGOAL")
  (make-package "PKG_NAV::GLOBAL_PATHGOAL"))

(in-package "ROS")
;;//! \htmlinclude global_pathGoal.msg.html
(if (not (find-package "GEOMETRY_MSGS"))
  (ros::roseus-add-msgs "geometry_msgs"))


(defclass pkg_nav::global_pathGoal
  :super ros::object
  :slots (_start_pose _goal_pose _goalPoseV1 _num ))

(defmethod pkg_nav::global_pathGoal
  (:init
   (&key
    ((:start_pose __start_pose) (instance geometry_msgs::PoseStamped :init))
    ((:goal_pose __goal_pose) (instance geometry_msgs::PoseStamped :init))
    ((:goalPoseV1 __goalPoseV1) ())
    ((:num __num) 0)
    )
   (send-super :init)
   (setq _start_pose __start_pose)
   (setq _goal_pose __goal_pose)
   (setq _goalPoseV1 __goalPoseV1)
   (setq _num (round __num))
   self)
  (:start_pose
   (&rest __start_pose)
   (if (keywordp (car __start_pose))
       (send* _start_pose __start_pose)
     (progn
       (if __start_pose (setq _start_pose (car __start_pose)))
       _start_pose)))
  (:goal_pose
   (&rest __goal_pose)
   (if (keywordp (car __goal_pose))
       (send* _goal_pose __goal_pose)
     (progn
       (if __goal_pose (setq _goal_pose (car __goal_pose)))
       _goal_pose)))
  (:goalPoseV1
   (&rest __goalPoseV1)
   (if (keywordp (car __goalPoseV1))
       (send* _goalPoseV1 __goalPoseV1)
     (progn
       (if __goalPoseV1 (setq _goalPoseV1 (car __goalPoseV1)))
       _goalPoseV1)))
  (:num
   (&optional __num)
   (if __num (setq _num __num)) _num)
  (:serialization-length
   ()
   (+
    ;; geometry_msgs/PoseStamped _start_pose
    (send _start_pose :serialization-length)
    ;; geometry_msgs/PoseStamped _goal_pose
    (send _goal_pose :serialization-length)
    ;; geometry_msgs/PoseStamped[] _goalPoseV1
    (apply #'+ (send-all _goalPoseV1 :serialization-length)) 4
    ;; int32 _num
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; geometry_msgs/PoseStamped _start_pose
       (send _start_pose :serialize s)
     ;; geometry_msgs/PoseStamped _goal_pose
       (send _goal_pose :serialize s)
     ;; geometry_msgs/PoseStamped[] _goalPoseV1
     (write-long (length _goalPoseV1) s)
     (dolist (elem _goalPoseV1)
       (send elem :serialize s)
       )
     ;; int32 _num
       (write-long _num s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; geometry_msgs/PoseStamped _start_pose
     (send _start_pose :deserialize buf ptr-) (incf ptr- (send _start_pose :serialization-length))
   ;; geometry_msgs/PoseStamped _goal_pose
     (send _goal_pose :deserialize buf ptr-) (incf ptr- (send _goal_pose :serialization-length))
   ;; geometry_msgs/PoseStamped[] _goalPoseV1
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _goalPoseV1 (let (r) (dotimes (i n) (push (instance geometry_msgs::PoseStamped :init) r)) r))
     (dolist (elem- _goalPoseV1)
     (send elem- :deserialize buf ptr-) (incf ptr- (send elem- :serialization-length))
     ))
   ;; int32 _num
     (setq _num (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get pkg_nav::global_pathGoal :md5sum-) "aef87d3d36de5fcb43eef8fad3407a39")
(setf (get pkg_nav::global_pathGoal :datatype-) "pkg_nav/global_pathGoal")
(setf (get pkg_nav::global_pathGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Define the goal
geometry_msgs/PoseStamped start_pose
geometry_msgs/PoseStamped goal_pose
geometry_msgs/PoseStamped[] goalPoseV1
int32 num  #test -cyb


================================================================================
MSG: geometry_msgs/PoseStamped
# A Pose with reference coordinate frame and timestamp
Header header
Pose pose

================================================================================
MSG: std_msgs/Header
# Standard metadata for higher-level stamped data types.
# This is generally used to communicate timestamped data 
# in a particular coordinate frame.
# 
# sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
string frame_id

================================================================================
MSG: geometry_msgs/Pose
# A representation of pose in free space, composed of position and orientation. 
Point position
Quaternion orientation

================================================================================
MSG: geometry_msgs/Point
# This contains the position of a point in free space
float64 x
float64 y
float64 z

================================================================================
MSG: geometry_msgs/Quaternion
# This represents an orientation in free space in quaternion form.

float64 x
float64 y
float64 z
float64 w

")



(provide :pkg_nav/global_pathGoal "aef87d3d36de5fcb43eef8fad3407a39")


