;; Auto-generated. Do not edit!


(when (boundp 'pkg_nav::local_pathResult)
  (if (not (find-package "PKG_NAV"))
    (make-package "PKG_NAV"))
  (shadow 'local_pathResult (find-package "PKG_NAV")))
(unless (find-package "PKG_NAV::LOCAL_PATHRESULT")
  (make-package "PKG_NAV::LOCAL_PATHRESULT"))

(in-package "ROS")
;;//! \htmlinclude local_pathResult.msg.html


(defclass pkg_nav::local_pathResult
  :super ros::object
  :slots (_runResult _result ))

(defmethod pkg_nav::local_pathResult
  (:init
   (&key
    ((:runResult __runResult) 0)
    ((:result __result) 0)
    )
   (send-super :init)
   (setq _runResult (round __runResult))
   (setq _result (round __result))
   self)
  (:runResult
   (&optional __runResult)
   (if __runResult (setq _runResult __runResult)) _runResult)
  (:result
   (&optional __result)
   (if __result (setq _result __result)) _result)
  (:serialization-length
   ()
   (+
    ;; int8 _runResult
    1
    ;; int32 _result
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; int8 _runResult
       (write-byte _runResult s)
     ;; int32 _result
       (write-long _result s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; int8 _runResult
     (setq _runResult (sys::peek buf ptr- :char)) (incf ptr- 1)
     (if (> _runResult 127) (setq _runResult (- _runResult 256)))
   ;; int32 _result
     (setq _result (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get pkg_nav::local_pathResult :md5sum-) "2bb32d147ef990e66003bb2d7c8e0b98")
(setf (get pkg_nav::local_pathResult :datatype-) "pkg_nav/local_pathResult")
(setf (get pkg_nav::local_pathResult :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Define the result
int8  runResult  # #  -1：处理失败  0 : 未处理     1：正在处理   2：处理完成  
int32 result #test -cyb

")



(provide :pkg_nav/local_pathResult "2bb32d147ef990e66003bb2d7c8e0b98")


